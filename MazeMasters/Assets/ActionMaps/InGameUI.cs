//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/ActionMaps/InGameUI.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InGameUI : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InGameUI()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InGameUI"",
    ""maps"": [
        {
            ""name"": ""General"",
            ""id"": ""35b06174-52a9-4178-a6ff-3b2f9ac6303a"",
            ""actions"": [
                {
                    ""name"": ""ToggleConsole"",
                    ""type"": ""Button"",
                    ""id"": ""e231d2d5-1917-400d-9444-69dfc9ed46a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartTypingConsole"",
                    ""type"": ""Button"",
                    ""id"": ""814c167c-8930-4f30-8d1f-3e940fff1206"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMenu"",
                    ""type"": ""Button"",
                    ""id"": ""045ce2f1-5a41-4358-a016-be1698321bff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""81c41c5a-4c7f-4667-84fe-19f6cf133a2a"",
                    ""path"": ""<Keyboard>/backslash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c5e7467-9927-49aa-ae06-5dd523c87895"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartTypingConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a05bf536-2728-4462-9f8c-8290721f9df1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Console"",
            ""id"": ""9a377bf7-3441-428d-8b09-e57c1df0f19a"",
            ""actions"": [
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""066e3df8-642c-4243-b048-606a578b2f51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeselectConsole"",
                    ""type"": ""Button"",
                    ""id"": ""2c2465c9-2248-41f3-a5d4-9d5c34531d77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Button"",
                    ""id"": ""e0fcebc8-6465-4fd2-a21a-949defb269bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""34e557f3-b1fa-4cb5-9b43-a48c09d7dcbc"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbac2164-404f-4f8f-88f2-53fdf4dc7d2b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeselectConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Scrolling"",
                    ""id"": ""547debdf-2d05-47cd-b1aa-be4aba311d75"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""702da081-dafc-4a98-9ef6-120acfe5a7f3"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fe3078de-3b29-432f-926a-5c80da62539b"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""3f72011b-8da9-4630-90c8-3909be28ff4f"",
            ""actions"": [
                {
                    ""name"": ""CloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""37d6d7f7-bfb9-4edc-bd86-1894ef4a8a40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3abd253a-83d8-45bf-8f7a-a31809ddd2ef"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Settings"",
            ""id"": ""b2cdf641-7cc2-4cc3-9eb3-abd29e3141f8"",
            ""actions"": [
                {
                    ""name"": ""CloseSettings"",
                    ""type"": ""Button"",
                    ""id"": ""8c020382-f1df-4e95-a80f-5f80530c788c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Button"",
                    ""id"": ""ca540348-1038-4bf9-9b34-0806561eee71"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""98cc4eae-e485-4c49-843c-833be8b75239"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseSettings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Scrolling"",
                    ""id"": ""4169e9ba-585c-44cb-a737-dade94ea3818"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3c4a3c99-63ca-47d0-89e6-dddadd4257af"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d37dfb60-0d8b-41cf-b799-0ec5d1091cd3"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // General
        m_General = asset.FindActionMap("General", throwIfNotFound: true);
        m_General_ToggleConsole = m_General.FindAction("ToggleConsole", throwIfNotFound: true);
        m_General_StartTypingConsole = m_General.FindAction("StartTypingConsole", throwIfNotFound: true);
        m_General_ToggleMenu = m_General.FindAction("ToggleMenu", throwIfNotFound: true);
        // Console
        m_Console = asset.FindActionMap("Console", throwIfNotFound: true);
        m_Console_Submit = m_Console.FindAction("Submit", throwIfNotFound: true);
        m_Console_DeselectConsole = m_Console.FindAction("DeselectConsole", throwIfNotFound: true);
        m_Console_Scroll = m_Console.FindAction("Scroll", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_CloseMenu = m_Menu.FindAction("CloseMenu", throwIfNotFound: true);
        // Settings
        m_Settings = asset.FindActionMap("Settings", throwIfNotFound: true);
        m_Settings_CloseSettings = m_Settings.FindAction("CloseSettings", throwIfNotFound: true);
        m_Settings_Scroll = m_Settings.FindAction("Scroll", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // General
    private readonly InputActionMap m_General;
    private IGeneralActions m_GeneralActionsCallbackInterface;
    private readonly InputAction m_General_ToggleConsole;
    private readonly InputAction m_General_StartTypingConsole;
    private readonly InputAction m_General_ToggleMenu;
    public struct GeneralActions
    {
        private @InGameUI m_Wrapper;
        public GeneralActions(@InGameUI wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleConsole => m_Wrapper.m_General_ToggleConsole;
        public InputAction @StartTypingConsole => m_Wrapper.m_General_StartTypingConsole;
        public InputAction @ToggleMenu => m_Wrapper.m_General_ToggleMenu;
        public InputActionMap Get() { return m_Wrapper.m_General; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
        public void SetCallbacks(IGeneralActions instance)
        {
            if (m_Wrapper.m_GeneralActionsCallbackInterface != null)
            {
                @ToggleConsole.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleConsole;
                @ToggleConsole.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleConsole;
                @ToggleConsole.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleConsole;
                @StartTypingConsole.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnStartTypingConsole;
                @StartTypingConsole.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnStartTypingConsole;
                @StartTypingConsole.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnStartTypingConsole;
                @ToggleMenu.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleMenu;
                @ToggleMenu.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleMenu;
                @ToggleMenu.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleMenu;
            }
            m_Wrapper.m_GeneralActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ToggleConsole.started += instance.OnToggleConsole;
                @ToggleConsole.performed += instance.OnToggleConsole;
                @ToggleConsole.canceled += instance.OnToggleConsole;
                @StartTypingConsole.started += instance.OnStartTypingConsole;
                @StartTypingConsole.performed += instance.OnStartTypingConsole;
                @StartTypingConsole.canceled += instance.OnStartTypingConsole;
                @ToggleMenu.started += instance.OnToggleMenu;
                @ToggleMenu.performed += instance.OnToggleMenu;
                @ToggleMenu.canceled += instance.OnToggleMenu;
            }
        }
    }
    public GeneralActions @General => new GeneralActions(this);

    // Console
    private readonly InputActionMap m_Console;
    private IConsoleActions m_ConsoleActionsCallbackInterface;
    private readonly InputAction m_Console_Submit;
    private readonly InputAction m_Console_DeselectConsole;
    private readonly InputAction m_Console_Scroll;
    public struct ConsoleActions
    {
        private @InGameUI m_Wrapper;
        public ConsoleActions(@InGameUI wrapper) { m_Wrapper = wrapper; }
        public InputAction @Submit => m_Wrapper.m_Console_Submit;
        public InputAction @DeselectConsole => m_Wrapper.m_Console_DeselectConsole;
        public InputAction @Scroll => m_Wrapper.m_Console_Scroll;
        public InputActionMap Get() { return m_Wrapper.m_Console; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ConsoleActions set) { return set.Get(); }
        public void SetCallbacks(IConsoleActions instance)
        {
            if (m_Wrapper.m_ConsoleActionsCallbackInterface != null)
            {
                @Submit.started -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnSubmit;
                @DeselectConsole.started -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnDeselectConsole;
                @DeselectConsole.performed -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnDeselectConsole;
                @DeselectConsole.canceled -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnDeselectConsole;
                @Scroll.started -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_ConsoleActionsCallbackInterface.OnScroll;
            }
            m_Wrapper.m_ConsoleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @DeselectConsole.started += instance.OnDeselectConsole;
                @DeselectConsole.performed += instance.OnDeselectConsole;
                @DeselectConsole.canceled += instance.OnDeselectConsole;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
            }
        }
    }
    public ConsoleActions @Console => new ConsoleActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    private readonly InputAction m_Menu_CloseMenu;
    public struct MenuActions
    {
        private @InGameUI m_Wrapper;
        public MenuActions(@InGameUI wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseMenu => m_Wrapper.m_Menu_CloseMenu;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
                @CloseMenu.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnCloseMenu;
                @CloseMenu.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnCloseMenu;
                @CloseMenu.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnCloseMenu;
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloseMenu.started += instance.OnCloseMenu;
                @CloseMenu.performed += instance.OnCloseMenu;
                @CloseMenu.canceled += instance.OnCloseMenu;
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);

    // Settings
    private readonly InputActionMap m_Settings;
    private ISettingsActions m_SettingsActionsCallbackInterface;
    private readonly InputAction m_Settings_CloseSettings;
    private readonly InputAction m_Settings_Scroll;
    public struct SettingsActions
    {
        private @InGameUI m_Wrapper;
        public SettingsActions(@InGameUI wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseSettings => m_Wrapper.m_Settings_CloseSettings;
        public InputAction @Scroll => m_Wrapper.m_Settings_Scroll;
        public InputActionMap Get() { return m_Wrapper.m_Settings; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SettingsActions set) { return set.Get(); }
        public void SetCallbacks(ISettingsActions instance)
        {
            if (m_Wrapper.m_SettingsActionsCallbackInterface != null)
            {
                @CloseSettings.started -= m_Wrapper.m_SettingsActionsCallbackInterface.OnCloseSettings;
                @CloseSettings.performed -= m_Wrapper.m_SettingsActionsCallbackInterface.OnCloseSettings;
                @CloseSettings.canceled -= m_Wrapper.m_SettingsActionsCallbackInterface.OnCloseSettings;
                @Scroll.started -= m_Wrapper.m_SettingsActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_SettingsActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_SettingsActionsCallbackInterface.OnScroll;
            }
            m_Wrapper.m_SettingsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloseSettings.started += instance.OnCloseSettings;
                @CloseSettings.performed += instance.OnCloseSettings;
                @CloseSettings.canceled += instance.OnCloseSettings;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
            }
        }
    }
    public SettingsActions @Settings => new SettingsActions(this);
    public interface IGeneralActions
    {
        void OnToggleConsole(InputAction.CallbackContext context);
        void OnStartTypingConsole(InputAction.CallbackContext context);
        void OnToggleMenu(InputAction.CallbackContext context);
    }
    public interface IConsoleActions
    {
        void OnSubmit(InputAction.CallbackContext context);
        void OnDeselectConsole(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnCloseMenu(InputAction.CallbackContext context);
    }
    public interface ISettingsActions
    {
        void OnCloseSettings(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
    }
}
